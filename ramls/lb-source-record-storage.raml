#%RAML 1.0

title: Source Record Storage Module
version: v3.0
protocols: [ HTTP, HTTPS ]
baseUri: http://localhost

documentation:
  - title: Source Record Storage API
    content: API for managing records

types:
  errorRecord: !include raml-storage/schemas/mod-source-record-storage/errorRecord.json
  errorRecordCollection: !include raml-storage/schemas/mod-source-record-storage/errorRecordCollection.json
  parsedRecord: !include raml-storage/schemas/mod-source-record-storage/parsedRecord.json
  parsedRecordCollection: !include raml-storage/schemas/mod-source-record-storage/parsedRecordCollection.json
  rawRecord: !include raml-storage/schemas/mod-source-record-storage/rawRecord.json
  rawRecordCollection: !include raml-storage/schemas/mod-source-record-storage/rawRecordCollection.json
  snapshot: !include raml-storage/schemas/mod-source-record-storage/snapshot.json
  snapshotCollection: !include raml-storage/schemas/mod-source-record-storage/snapshotCollection.json
  record: !include raml-storage/schemas/dto/record.json
  recordCollection: !include raml-storage/schemas/dto/recordCollection.json
  sourceRecord: !include raml-storage/schemas/dto/sourceRecord.json
  sourceRecordCollection: !include raml-storage/schemas/dto/sourceRecordCollection.json
  errors: !include raml-storage/raml-util/schemas/errors.schema

traits:
  validate: !include raml-storage/raml-util/traits/validation.raml
  language: !include raml-storage/raml-util/traits/language.raml
  pageable:  !include raml-storage/raml-util/traits/pageable.raml

resourceTypes:
  collection: !include raml-storage/raml-util/rtypes/collection.raml
  collection-item: !include raml-storage/raml-util/rtypes/item-collection.raml

/lb-source-storage:

  /snapshots:
    displayName: Snapshots
    description: API for managing Snapshots
    type:
      collection:
        schemaCollection: snapshotCollection
        schemaItem: snapshot
        exampleCollection: !include raml-storage/examples/mod-source-record-storage/snapshotCollection.sample
        exampleItem: !include raml-storage/examples/mod-source-record-storage/snapshot.sample
    post:
      is: [validate]
    get:
      is: [
        pageable,
        validate
      ]
    /{jobExecutionId}:
      displayName: Snapshot
      description: Get, Delete or Update a specific Snapshot
      type:
        collection-item:
          schema: snapshot
          exampleItem: !include raml-storage/examples/mod-source-record-storage/snapshot.sample
      put:
        is: [validate]
        responses:
          200:
            body:
              application/json:
                type: snapshot
      delete:
        description: Deletes snapshot and all related records
        responses:
          204:

  /records:
    displayName: Records
    description: API for managing Records
    type:
      collection:
        schemaCollection: recordCollection
        schemaItem: record
        exampleCollection: !include raml-storage/examples/mod-source-record-storage/recordCollection.sample
        exampleItem: !include raml-storage/examples/mod-source-record-storage/record.sample
    post:
      is: [validate]
    get:
      is: [
        pageable,
        validate
      ]
      queryParameters:
        snapshotId:
          description: Filter by Snapshot Id
          type: string
          example: "e5ddbbdc-90b3-498f-bb8f-49367ca4c142"
          required: false
        orderBy:
          description: Sort Records
          type: string
          example: "order,DESC"
          required: false
    /{id}:
      displayName: Record
      description: Get, Delete or Update a specific Record
      type:
        collection-item:
          schema: record
          exampleItem: !include raml-storage/examples/mod-source-record-storage/record.sample
      put:
        is: [validate]
        responses:
          200:
            body:
              application/json:
                type: record
      delete:
        responses:
          204:
      /formatted:
        displayName: Formatted Record
        get:
          description: Get Record with formatted content
          queryParameters:
            idType:
              description: Type of Id for Record lookup
              type: string
              example: INSTANCE
              required: false
              default: RECORD
          responses:
            200:
              body:
                application/json:
                  type: record
            404:
              description: Not found
              body:
                text/plain:
                  example: "Not found"
      /suppressFromDiscovery:
        displayName: Suppress From Discovery
        put:
          description: Update Record suppress from discovery additional information
          queryParameters:
            idType:
              description: Type of Id for Record lookup
              type: string
              example: INSTANCE
              required: false
              default: RECORD
            suppress:
              description: Whether to suppress or unsuppress from discovery
              example: false
              type: boolean
              default: true
              required: false
          responses:
            200:
              body:
                application/json:
                  type: record
            404:
              description: Not found
              body:
                text/plain:
                  example: "Not found"

  /sourceRecords:
    displayName: Source Records
    description: API for getting Source Records
    get:
      description: Get a list of Source Records
      is: [
        pageable,
        validate
      ]
      queryParameters:
        instanceId:
          description: Filter by Instance Id
          type: string
          example: "8b07da70-8ea7-4acd-83a0-44d83979c73b"
          required: false
        recordType:
          description: Filter by Record Type
          type: string
          example: "MARC"
          required: false
        suppressFromDiscovery:
          description: Filter by suppress from discovery
          type: boolean
          example: true
          required: false
        updatedAfter:
          description: Start date to filter after
          type: string
          required: false
        updatedBefore:
          description: End date to filter before, inclusive
          type: string
          required: false
        orderBy:
          description: Sort records
          type: string
          example: "order,DESC"
          required: false
      responses:
        200:
          body:
            application/json:
              type: sourceRecordCollection
        400:
          description: Bad request
          body:
            text/plain:
              example: "Bad request"
        500:
          description: Internal server error
          body:
            text/plain:
              example: "Internal server error"
    /{id}:
      displayName: Source Record
      description: API for getting Source Records via different idTypes
      get:
        description: selection condition of sourceRecords by which id will be searched record
        queryParameters:
          idType:
            description: Type of id for record lookup
            type: string
            example: INSTANCE
            required: false
            default: RECORD
        responses:
          200:
            body:
              application/json:
                type: sourceRecord
          400:
            description: Bad request
            body:
              text/plain:
                example: "Bad request"
          404:
            description: Not found
            body:
              text/plain:
                example: "Not found"
          500:
            description: Internal server error
            body:
              text/plain:
                example: "Internal server error"