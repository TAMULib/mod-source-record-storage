<databaseChangeLog
  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd">

  <changeSet runAlways="true" id="2020-06-13--17-00-drop-get_record_by_external_id" author="WilliamWelling">
    <sql>
      DROP FUNCTION IF EXISTS ${database.defaultSchemaName}.get_record_by_external_id(externalId uuid, idFieldName text);
    </sql>
  </changeSet>

  <changeSet runAlways="true" id="2020-06-13--17-01-drop-get_record_by_matched_id" author="WilliamWelling">
    <sql>
      DROP FUNCTION IF EXISTS ${database.defaultSchemaName}.get_record_by_matched_id(record_id uuid);
    </sql>
  </changeSet>

  <changeSet runAlways="true" id="2020-06-13--17-02-drop-get_source_record_by_id" author="WilliamWelling">
    <sql>
      DROP FUNCTION IF EXISTS ${database.defaultSchemaName}.get_source_record_by_id(record_id uuid);
    </sql>
  </changeSet>

  <changeSet runAlways="true" id="2020-06-13--17-03-drop-get_source_record_by_external_id" author="WilliamWelling">
    <sql>
      DROP FUNCTION IF EXISTS ${database.defaultSchemaName}.get_source_record_by_external_id(externalId uuid, idFieldName text);
    </sql>
  </changeSet>

  <changeSet runAlways="true" id="2020-06-13--17-04-drop-get_records" author="WilliamWelling">
    <sql>
      DROP FUNCTION IF EXISTS ${database.defaultSchemaName}.get_records(where_clause text, order_by text, limitVal int, offsetVal int, schema_name text);
    </sql>
  </changeSet>

  <changeSet runAlways="true" id="2020-06-13--17-05-drop-get_source_records" author="WilliamWelling">
    <sql>
      DROP FUNCTION IF EXISTS ${database.defaultSchemaName}.get_source_records(query_filter text, order_by text, limitVal int, offsetVal int, deleted_records text, schema_name text);
    </sql>
  </changeSet>

  <changeSet runAlways="true" id="2020-06-13--17-06-drop-get_highest_generation" author="WilliamWelling">
    <sql>
      DROP FUNCTION IF EXISTS ${database.defaultSchemaName}.get_highest_generation(matchedId uuid, snapshotId uuid);
    </sql>
  </changeSet>

</databaseChangeLog>
